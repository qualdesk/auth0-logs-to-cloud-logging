{"version":3,"sources":["../src/mapper.js"],"names":["mapType","type","types","mapSeverity","log","level","metadata","location","nodeId","namespace","resource","labels","node_id","severity","timestamp","Date","date","insertId","client","client_name","body","client_id","connection","connection_id","hostname","description","details","strategy","strategy_type","user_agent","user_id","user_name","ip","_original"],"mappings":"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","sourcesContent":["function mapType({ type }) {\n  const types = {\n    \"s\": [\"Success Login\", 1],\n    \"seacft\": [\"Success Exchange\", 1],\n    \"feacft\": [\"Failed Exchange\", 3],\n    \"f\": [\"Failed Login\", 3],\n    \"w\": [\"Warnings During Login\", 2],\n    \"du\": [\"Deleted User\", 1],\n    \"fu\": [\"Failed Login (invalid email/username)\", 3],\n    \"fp\": [\"Failed Login (wrong password)\", 3],\n    \"fc\": [\"Failed by Connector\", 3],\n    \"fcp\": [\"Failed by CORS\", 3],\n    \"con\": [\"Connector Online\", 1],\n    \"coff\": [\"Connector Offline\", 3],\n    \"fcpro\": [\"Failed Connector Provisioning\", 4],\n    \"ss\": [\"Success Signup\", 1],\n    \"fs\": [\"Failed Signup\", 3],\n    \"cs\": [\"Code Sent\", 0],\n    \"cls\": [\"Code/Link Sent\", 0],\n    \"sv\": [\"Success Verification Email\", 0],\n    \"fv\": [\"Failed Verification Email\", 0],\n    \"scp\": [\"Success Change Password\", 1],\n    \"fcp\": [\"Failed Change Password\", 3],\n    \"sce\": [\"Success Change Email\", 1],\n    \"fce\": [\"Failed Change Email\", 3],\n    \"scu\": [\"Success Change Username\", 1],\n    \"fcu\": [\"Failed Chagne Username\", 3],\n    \"scpn\": [\"Success Change Phone Number\", 1],\n    \"fcpn\": [\"Failed Change Phone Number\", 3],\n    \"svr\": [\"Success Verification Email Request\", 0],\n    \"fvr\": [\"Failed Verification Email Request\", 3],\n    \"scpr\": [\"Success Change Password Request\", 0],\n    \"fcpr\": [\"Failed Change Password Request\", 3],\n    \"fn\": [\"Failed Sending Notification\", 3],\n    \"limit_wc\": [\"Blocked Account\", 4],\n    \"limit_ui\": [\"Too Many Calls to /userinfo\", 4],\n    \"api_limit\": [\"Rate Limit on API\", 4],\n    \"sdu\": [\"Successful User Deletion\", 1],\n    \"fdu\": [\"Failed User Deletion\", 3],\n    \"depnote\": [\"Deprecation Notice\", 300],\n    \"sapi\": [\"API Operation\", 0],\n    \"slo\": [\"Success Logout\", 1],\n    \"seccft\": [\"Success Exchange\", 1],\n  }\n\n  return types[type] || [`No mapping found for: ${type}`, 4]\n}\n\nfunction mapSeverity(log) {\n  const [type, level] = mapType(log)\n  if (level > 99) { return level }  // some types are mapped directly to Cloud Logging\n                                    // severity levels\n\n  // DEFAULT\t(0) The log entry has no assigned severity level.\n  // DEBUG\t(100) Debug or trace information.\n  // INFO\t(200) Routine information, such as ongoing status or performance.\n  // NOTICE\t(300) Normal but significant events, such as start up, shut down, or a configuration change.\n  // WARNING\t(400) Warning events might cause problems.\n  // ERROR\t(500) Error events are likely to cause problems.\n  // CRITICAL\t(600) Critical events cause more severe problems or outages.\n  // ALERT\t(700) A person must take an action immediately.\n  // EMERGENCY\t(800) One or more systems are unusable.\n  switch (level) {\n    case 0:\n      return \"DEFAULT\"\n    case 1:\n      return \"DEBUG\"\n    case 2:\n      return \"INFO\"\n    case 3:\n      return \"ERROR\"\n    case 4:\n      return \"CRITICAL\" // or \"ALERT\"\n  }\n}\n\n\nfunction metadata({ location, nodeId, namespace }, log) {\n  return {\n    resource: {\n      type: 'generic_node',\n      labels: {\n        location: location,\n        namespace: namespace,\n        node_id: nodeId,\n      }\n    },\n    severity: mapSeverity(log),\n    timestamp: new Date(log.date),\n    insertId: log[\"_id\"],\n    labels: {\n      type: mapType(log)[0],\n      client: log.client_name,\n    }\n  }\n}\n\nfunction body(log) {\n  return {\n    client_id: log.client_id,\n    client_name: log.client_name,\n    connection: log.connection,\n    connection_id: log.connection_id,\n\n    hostname: log.hostname,\n\n    description: log.description,\n    details: log.details,\n\n    strategy: log.strategy,\n    strategy_type: log.strategy_type,\n\n    user_agent: log.user_agent,\n    user_id: log.user_id,\n    user_name: log.user_name,\n    ip: log.ip,\n\n    _original: log\n  }\n}\n\nexport {\n  metadata,\n  body\n}\n"],"file":"mapper.js"}